# -*- coding: utf-8 -*-
"""разбиение по токенам.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Niw7_v-jJIkp-gqKLBYZX9DortT21bu9
"""

!pip install fuzzywuzzy
!pip install rapidfuzz
import pandas as pd
from rapidfuzz import fuzz, process
import re
import numpy as np

df1 = pd.read_csv('main1.csv',skipinitialspace=True, nrows = 1_000)
df2 = pd.read_csv('main2.csv',skipinitialspace=True, nrows = 1_000)
df3 = pd.read_csv('main3.csv',skipinitialspace=True, nrows = 1_000)

# df1 = pd.read_csv('main1.csv', skipinitialspace=True)

# df2 = pd.read_csv('maint2.csv', skipinitialspace=True)

# df3 = pd.read_csv('main3.csv',skipinitialspace=True)

df1 = df1.applymap(lambda s: s.lower() if type(s) == str else s)
df2 = df2.applymap(lambda s: s.lower() if type(s) == str else s)
df3 = df3.applymap(lambda s: s.lower() if type(s) == str else s)

df1

df1[['last_name', 'first_name', 'middle_name']] = df1['full_name'].str.split(' ', n=2, expand=True)


df1[['email_username', 'email_domain']] = df1['email'].str.split('@', expand=True)

df1['birth_year'] = df1['birthdate'].str[:4]
df1['birth_month'] = df1['birthdate'].str[5:7]
df1['birth_day'] = df1['birthdate'].str[8:10]

df1['birth_year'] = pd.to_numeric(df1['birth_year'], errors='coerce').abs()
df1['birth_month'] = pd.to_numeric(df1['birth_month'], errors='coerce').abs()
df1['birth_day'] = pd.to_numeric(df1['birth_day'], errors='coerce').abs()

def process_phone(phone):
    phone_clean = re.sub(r'\D', '', phone)
    operator_code = phone_clean[1:4]
    main_number = phone_clean[4:]
    return operator_code, main_number

df1['phone_operator_code'], df1['phone_main_number'] = zip(*df1['phone'].apply(process_phone))

df1['sex'] = df1['sex'].map({'m': 1, 'f': 0}).fillna(np.nan)


df1 = df1.drop(columns=['full_name', 'email', 'birthdate', 'phone'])


df1.to_csv('main1_new.csv', index=False)

df1_new = pd.read_csv("main1_new.csv")
df1_new

df2

df2['birth_year'] = df2['birthdate'].str[:4]
df2['birth_month'] = df2['birthdate'].str[5:7]
df2['birth_day'] = df2['birthdate'].str[8:10]

df2['birth_year'] = pd.to_numeric(df2['birth_year'], errors='coerce').abs()
df2['birth_month'] = pd.to_numeric(df2['birth_month'], errors='coerce').abs()
df2['birth_day'] = pd.to_numeric(df2['birth_day'], errors='coerce').abs()


def process_phone(phone):
    phone_clean = re.sub(r'\D', '', phone)
    operator_code = phone_clean[1:4]
    main_number = phone_clean[4:]
    return operator_code, main_number

df2['phone_operator_code'], df2['phone_main_number'] = zip(*df2['phone'].apply(process_phone))

df2['sex'] = np.nan

df2 = df2.drop(columns=['birthdate', 'phone'])

df2.to_csv('main2_new.csv', index=False)

df2_new = pd.read_csv("main2_new.csv")
df2_new

df3

df3[['first_name', 'last_name']] = df3['name'].str.split(' ', n=1, expand=True)

def split_email(email):
    if '@' in email:
        return email.split('@')
    else:
        return [email, 'invalid_email']

df3[['email_username', 'email_domain']] = pd.DataFrame(df3['email'].apply(split_email).tolist(), index=df3.index)


df3['birth_year'] = df3['birthdate'].str[:4]
df3['birth_month'] = df3['birthdate'].str[5:7]
df3['birth_day'] = df3['birthdate'].str[8:10]

df3['birth_year'] = pd.to_numeric(df3['birth_year'], errors='coerce').abs()
df3['birth_month'] = pd.to_numeric(df3['birth_month'], errors='coerce').abs()
df3['birth_day'] = pd.to_numeric(df3['birth_day'], errors='coerce').abs()


df3['sex'] = df3['sex'].map({'m': 1, 'f': 0}).fillna(np.nan)


df3 = df3.drop(columns=['name', 'email', 'birthdate'])


df3.to_csv('main3_new.csv', index=False)

df3_new = pd.read_csv("main3_new.csv")
df3_new